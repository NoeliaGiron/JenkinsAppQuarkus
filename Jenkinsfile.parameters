pipeline {
    agent any
    
    tools {
        maven 'Maven 3.9.6'
        jdk 'JDK 17'
    }
    
    parameters {
        booleanParam(
            name: 'BUILD_NATIVE',
            defaultValue: false,
            description: 'Construir imagen nativa de Quarkus'
        )
        choice(
            name: 'DEPLOY_ENVIRONMENT',
            choices: ['dev', 'staging', 'prod'],
            description: 'Ambiente de despliegue'
        )
        string(
            name: 'APP_VERSION',
            defaultValue: '1.0.0-SNAPSHOT',
            description: 'Versi√≥n de la aplicaci√≥n'
        )
        booleanParam(
            name: 'SEND_NOTIFICATIONS',
            defaultValue: true,
            description: 'Enviar notificaciones por email'
        )
    }
    
    environment {
        APP_NAME = 'hola-noelia'
        QUARKUS_VERSION = '3.6.3'
        JAVA_HOME = tool('JDK 17')
        BUILD_TAG = "${env.BUILD_TAG}"
        GIT_COMMIT = "${env.GIT_COMMIT}"
        GIT_BRANCH = "${env.GIT_BRANCH}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'üîç Verificando c√≥digo fuente...'
                checkout scm
                
                script {
                    // Mostrar informaci√≥n del build
                    echo "üìã Informaci√≥n del Build:"
                    echo "  - Proyecto: ${env.JOB_NAME}"
                    echo "  - Build: ${env.BUILD_NUMBER}"
                    echo "  - Branch: ${env.GIT_BRANCH}"
                    echo "  - Commit: ${env.GIT_COMMIT}"
                    echo "  - Versi√≥n: ${params.APP_VERSION}"
                    echo "  - Ambiente: ${params.DEPLOY_ENVIRONMENT}"
                    echo "  - Native Build: ${params.BUILD_NATIVE}"
                }
            }
        }
        
        stage('Validate') {
            steps {
                echo '‚úÖ Validando proyecto Maven...'
                sh 'mvn validate'
            }
        }
        
        stage('Compile') {
            steps {
                echo 'üî® Compilando aplicaci√≥n Quarkus...'
                sh 'mvn compile'
            }
        }
        
        stage('Test') {
            steps {
                echo 'üß™ Ejecutando pruebas...'
                sh 'mvn test'
            }
            post {
                always {
                    echo 'üìä Generando reportes de pruebas...'
                    publishTestResults testResultsPattern: '**/target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Package') {
            steps {
                echo 'üì¶ Empaquetando aplicaci√≥n...'
                sh 'mvn clean package -DskipTests'
            }
        }
        
        stage('Quality Check') {
            steps {
                echo 'üîç Verificando calidad del c√≥digo...'
                sh 'mvn spotbugs:check'
            }
        }
        
        stage('Build Native (Optional)') {
            when {
                expression { params.BUILD_NATIVE == true }
            }
            steps {
                echo 'üöÄ Construyendo imagen nativa...'
                sh 'mvn clean package -Pnative -Dquarkus.native.container-build=true'
            }
        }
        
        stage('Archive Artifacts') {
            steps {
                echo 'üìÅ Archivando artefactos...'
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                archiveArtifacts artifacts: 'target/quarkus-app/**/*', fingerprint: true
                
                script {
                    // Crear archivo de informaci√≥n del build
                    sh '''
                        echo "Build Information" > build-info.txt
                        echo "=================" >> build-info.txt
                        echo "Project: ${JOB_NAME}" >> build-info.txt
                        echo "Build: ${BUILD_NUMBER}" >> build-info.txt
                        echo "Version: ${APP_VERSION}" >> build-info.txt
                        echo "Branch: ${GIT_BRANCH}" >> build-info.txt
                        echo "Commit: ${GIT_COMMIT}" >> build-info.txt
                        echo "Date: $(date)" >> build-info.txt
                        echo "Quarkus Version: ${QUARKUS_VERSION}" >> build-info.txt
                    '''
                    archiveArtifacts artifacts: 'build-info.txt', fingerprint: true
                }
            }
        }
        
        stage('Deploy to Environment') {
            steps {
                echo "üöÄ Desplegando a ambiente: ${params.DEPLOY_ENVIRONMENT}"
                script {
                    switch(params.DEPLOY_ENVIRONMENT) {
                        case 'dev':
                            echo 'Desplegando a desarrollo...'
                            sh '''
                                echo "‚úÖ Despliegue a desarrollo completado"
                                echo "Aplicaci√≥n disponible en: http://localhost:8080"
                                echo "Para ejecutar: java -jar target/quarkus-app/quarkus-run.jar"
                            '''
                            break
                        case 'staging':
                            echo 'Desplegando a staging...'
                            sh '''
                                echo "‚úÖ Despliegue a staging completado"
                                echo "Aplicaci√≥n disponible en: http://staging-server:8080"
                            '''
                            break
                        case 'prod':
                            echo 'Desplegando a producci√≥n...'
                            sh '''
                                echo "‚úÖ Despliegue a producci√≥n completado"
                                echo "Aplicaci√≥n disponible en: http://prod-server:8080"
                            '''
                            break
                    }
                }
            }
        }
        
        stage('Health Check') {
            steps {
                echo 'üè• Verificando salud de la aplicaci√≥n...'
                script {
                    // Simular health check
                    sh '''
                        echo "Verificando endpoints..."
                        echo "‚úÖ /hola - OK"
                        echo "‚úÖ /hola/json - OK"
                        echo "‚úÖ /hola/web - OK"
                        echo "‚úÖ / - OK (redirect)"
                    '''
                }
            }
        }
    }
    
    post {
        always {
            echo 'üßπ Limpiando workspace...'
            cleanWs()
        }
        success {
            echo '‚úÖ Pipeline completado exitosamente!'
            script {
                if (params.SEND_NOTIFICATIONS) {
                    emailext (
                        subject: "‚úÖ Pipeline SUCCESS: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: """
                            <h2>Pipeline Completado Exitosamente</h2>
                            <p><strong>Proyecto:</strong> ${env.JOB_NAME}</p>
                            <p><strong>Build:</strong> ${env.BUILD_NUMBER}</p>
                            <p><strong>Branch:</strong> ${env.GIT_BRANCH}</p>
                            <p><strong>Commit:</strong> ${env.GIT_COMMIT}</p>
                            <p><strong>Duraci√≥n:</strong> ${currentBuild.durationString}</p>
                            <p><strong>Ambiente:</strong> ${params.DEPLOY_ENVIRONMENT}</p>
                            <p><strong>Versi√≥n:</strong> ${params.APP_VERSION}</p>
                            
                            <h3>üéØ Aplicaci√≥n Quarkus</h3>
                            <p><strong>Nombre:</strong> ${env.APP_NAME}</p>
                            <p><strong>Quarkus:</strong> ${env.QUARKUS_VERSION}</p>
                            
                            <h3>üîó Enlaces</h3>
                            <ul>
                                <li><a href="${env.BUILD_URL}">Ver Build</a></li>
                                <li><a href="${env.BUILD_URL}console">Ver Logs</a></li>
                            </ul>
                        """,
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']]
                    )
                }
            }
        }
        failure {
            echo '‚ùå Pipeline fall√≥!'
            script {
                if (params.SEND_NOTIFICATIONS) {
                    emailext (
                        subject: "‚ùå Pipeline FAILED: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: """
                            <h2>Pipeline Fall√≥</h2>
                            <p><strong>Proyecto:</strong> ${env.JOB_NAME}</p>
                            <p><strong>Build:</strong> ${env.BUILD_NUMBER}</p>
                            <p><strong>Branch:</strong> ${env.GIT_BRANCH}</p>
                            <p><strong>Commit:</strong> ${env.GIT_COMMIT}</p>
                            <p><strong>Duraci√≥n:</strong> ${currentBuild.durationString}</p>
                            
                            <h3>üîç Para m√°s detalles:</h3>
                            <ul>
                                <li><a href="${env.BUILD_URL}">Ver Build</a></li>
                                <li><a href="${env.BUILD_URL}console">Ver Logs</a></li>
                            </ul>
                        """,
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']]
                    )
                }
            }
        }
        cleanup {
            echo 'üßπ Limpieza final...'
        }
    }
} 