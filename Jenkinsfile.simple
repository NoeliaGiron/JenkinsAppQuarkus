pipeline {
    agent any
    
    parameters {
        booleanParam(
            name: 'SEND_NOTIFICATIONS',
            defaultValue: true,
            description: 'Enviar notificaciones por email'
        )
        string(
            name: 'APP_VERSION',
            defaultValue: '1.0.0-SNAPSHOT',
            description: 'Versi√≥n de la aplicaci√≥n'
        )
    }
    
    environment {
        APP_NAME = 'hola-noelia'
        QUARKUS_VERSION = '3.6.3'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'üîç Verificando c√≥digo fuente...'
                checkout scm
                
                script {
                    echo "üìã Informaci√≥n del Build:"
                    echo "  - Proyecto: ${env.JOB_NAME}"
                    echo "  - Build: ${env.BUILD_NUMBER}"
                    echo "  - Branch: ${env.GIT_BRANCH}"
                    echo "  - Commit: ${env.GIT_COMMIT}"
                    echo "  - Versi√≥n: ${params.APP_VERSION}"
                    echo "  - Quarkus: ${env.QUARKUS_VERSION}"
                }
            }
        }
        
        stage('Validate') {
            steps {
                echo '‚úÖ Validando proyecto Maven...'
                sh 'mvn validate'
            }
        }
        
        stage('Compile') {
            steps {
                echo 'üî® Compilando aplicaci√≥n Quarkus...'
                sh 'mvn compile'
            }
        }
        
        stage('Test') {
            steps {
                echo 'üß™ Ejecutando pruebas...'
                sh 'mvn test'
            }
            post {
                always {
                    echo 'üìä Generando reportes de pruebas...'
                    publishTestResults testResultsPattern: '**/target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Package') {
            steps {
                echo 'üì¶ Empaquetando aplicaci√≥n...'
                sh 'mvn clean package -DskipTests'
            }
        }
        
        stage('Archive Artifacts') {
            steps {
                echo 'üìÅ Archivando artefactos...'
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                archiveArtifacts artifacts: 'target/quarkus-app/**/*', fingerprint: true
                
                script {
                    sh '''
                        echo "Build Information" > build-info.txt
                        echo "=================" >> build-info.txt
                        echo "Project: ${JOB_NAME}" >> build-info.txt
                        echo "Build: ${BUILD_NUMBER}" >> build-info.txt
                        echo "Version: ${APP_VERSION}" >> build-info.txt
                        echo "Branch: ${GIT_BRANCH}" >> build-info.txt
                        echo "Commit: ${GIT_COMMIT}" >> build-info.txt
                        echo "Date: $(date)" >> build-info.txt
                        echo "Quarkus Version: ${QUARKUS_VERSION}" >> build-info.txt
                    '''
                    archiveArtifacts artifacts: 'build-info.txt', fingerprint: true
                }
            }
        }
        
        stage('Success Info') {
            steps {
                echo 'üéâ Informaci√≥n de √©xito...'
                script {
                    sh '''
                        echo "=========================================="
                        echo "üéâ ¬°Pipeline completado exitosamente!"
                        echo "=========================================="
                        echo ""
                        echo "üì¶ Artefactos generados:"
                        echo "  - JAR: target/hola-noelia-1.0.0-SNAPSHOT.jar"
                        echo "  - App: target/quarkus-app/"
                        echo ""
                        echo "üöÄ Para ejecutar:"
                        echo "  java -jar target/quarkus-app/quarkus-run.jar"
                        echo ""
                        echo "üåê Endpoints:"
                        echo "  - http://localhost:8080/ (redirect)"
                        echo "  - http://localhost:8080/hola/web (web)"
                        echo "  - http://localhost:8080/hola (texto)"
                        echo "  - http://localhost:8080/hola/json (JSON)"
                        echo ""
                        echo "üê≥ Docker:"
                        echo "  docker build -t hola-noelia ."
                        echo "  docker run -p 8080:8080 hola-noelia"
                        echo ""
                        echo "üìä Build: ${BUILD_URL}"
                        echo "=========================================="
                    '''
                }
            }
        }
    }
    
    post {
        always {
            echo 'üßπ Limpiando workspace...'
            cleanWs()
        }
        success {
            echo '‚úÖ Pipeline completado exitosamente!'
            script {
                if (params.SEND_NOTIFICATIONS) {
                    emailext (
                        subject: "‚úÖ Pipeline SUCCESS: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: """
                            <h2>Pipeline Completado Exitosamente</h2>
                            <p><strong>Proyecto:</strong> ${env.JOB_NAME}</p>
                            <p><strong>Build:</strong> ${env.BUILD_NUMBER}</p>
                            <p><strong>Branch:</strong> ${env.GIT_BRANCH}</p>
                            <p><strong>Commit:</strong> ${env.GIT_COMMIT}</p>
                            <p><strong>Duraci√≥n:</strong> ${currentBuild.durationString}</p>
                            <p><strong>Versi√≥n:</strong> ${params.APP_VERSION}</p>
                            
                            <h3>üéØ Aplicaci√≥n Quarkus</h3>
                            <p><strong>Nombre:</strong> ${env.APP_NAME}</p>
                            <p><strong>Quarkus:</strong> ${env.QUARKUS_VERSION}</p>
                            
                            <h3>üöÄ Para ejecutar:</h3>
                            <p><code>java -jar target/quarkus-app/quarkus-run.jar</code></p>
                            
                            <h3>üåê Endpoints:</h3>
                            <ul>
                                <li><a href="http://localhost:8080/">Interfaz Principal</a></li>
                                <li><a href="http://localhost:8080/hola/web">Interfaz Web</a></li>
                                <li><a href="http://localhost:8080/hola">API Texto</a></li>
                                <li><a href="http://localhost:8080/hola/json">API JSON</a></li>
                            </ul>
                            
                            <h3>üîó Enlaces</h3>
                            <ul>
                                <li><a href="${env.BUILD_URL}">Ver Build</a></li>
                                <li><a href="${env.BUILD_URL}console">Ver Logs</a></li>
                            </ul>
                        """,
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']]
                    )
                }
            }
        }
        failure {
            echo '‚ùå Pipeline fall√≥!'
            script {
                if (params.SEND_NOTIFICATIONS) {
                    emailext (
                        subject: "‚ùå Pipeline FAILED: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: """
                            <h2>Pipeline Fall√≥</h2>
                            <p><strong>Proyecto:</strong> ${env.JOB_NAME}</p>
                            <p><strong>Build:</strong> ${env.BUILD_NUMBER}</p>
                            <p><strong>Branch:</strong> ${env.GIT_BRANCH}</p>
                            <p><strong>Commit:</strong> ${env.GIT_COMMIT}</p>
                            <p><strong>Duraci√≥n:</strong> ${currentBuild.durationString}</p>
                            
                            <h3>üîç Para m√°s detalles:</h3>
                            <ul>
                                <li><a href="${env.BUILD_URL}">Ver Build</a></li>
                                <li><a href="${env.BUILD_URL}console">Ver Logs</a></li>
                            </ul>
                        """,
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']]
                    )
                }
            }
        }
        cleanup {
            echo 'üßπ Limpieza final...'
        }
    }
} 